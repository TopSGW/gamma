{"version":3,"file":"static/js/497.af30ccca.chunk.js","mappings":"8NASA,EAPsB,SAACA,GAEnB,OAAO,gBAAKC,UAAU,gBAAf,UACH,cAAGA,UAAU,qBAAb,SAAmCD,EAAME,aC+BjD,EA5BoB,SAACF,GAEjB,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEEC,GAAeC,EAAAA,EAAAA,cAAW,iBAAC,oGACNC,EAAAA,EAAAA,IAAA,iBAA4BR,EAAMS,OAAlC,cADM,OACvBC,EADuB,OAG7BC,QAAQC,IAAIF,EAASG,KAAKC,UAC1BT,EAAWK,EAASG,KAAKC,UAJI,2CAO3B,CAACd,EAAMS,SAQT,OANDM,EAAAA,EAAAA,YAAU,WAENT,MAED,CAACA,KAEI,gBAAKL,UAAU,kBAAf,SACNG,EAAQY,KAAI,SAAAC,GACT,OAAO,SAAC,EAAD,CAA6Bf,QAASe,EAAIC,MAAtBD,EAAIE","sources":["components/SingleComment/SingleComment.js","components/AllComments/AllComments.js"],"sourcesContent":["import \"./SingleComment.scss\"\r\n\r\nconst SingleComment = (props) => {\r\n\r\n    return <div className=\"singlecomment\">\r\n        <p className=\"singlecomment__one\">{props.comText}</p>\r\n    </div>\r\n};\r\n\r\nexport default SingleComment;","import { useState, useEffect, useCallback } from \"react\";\r\nimport { axiosInstance } from \"../../config\";\r\n\r\nimport SingleComment from \"../SingleComment/SingleComment\";\r\nimport \"./AllComments.scss\"\r\n\r\n\r\n\r\nconst AllComments = (props) => {\r\n\r\n    const [comment, setComment] = useState([])\r\n   \r\nconst commentFetch = useCallback(async () => {\r\n    const response = await axiosInstance.get(`/posts/${props.postId}/comments`);\r\n\r\n    console.log(response.data.comments);\r\n    setComment(response.data.comments)\r\n    \r\n    \r\n   }, [props.postId])\r\n\r\n   useEffect(() => {\r\n       \r\n       commentFetch();\r\n       \r\n   }, [commentFetch])\r\n       \r\n    return <div className=\"allCommentslist\">  \r\n    {comment.map(com => {\r\n        return <SingleComment key={com._id} comText={com.text} />\r\n    })}\r\n   \r\n    {/* <SingleComment /> */}\r\n</div>\r\n};\r\n\r\nexport default AllComments;"],"names":["props","className","comText","useState","comment","setComment","commentFetch","useCallback","axiosInstance","postId","response","console","log","data","comments","useEffect","map","com","text","_id"],"sourceRoot":""}